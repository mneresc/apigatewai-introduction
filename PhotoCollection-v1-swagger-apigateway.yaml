---
swagger: "2.0"
info:
  version: "2019-04-17T18:59:57Z"
  title: "PhotoCollection"
host: "d974gxrz61.execute-api.us-east-1.amazonaws.com"
basePath: "/v1"
schemes:
- "https"
paths:
  /assunto:
    get:
      summary: "Listar fotos por assunto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::518049171605:role/PhotoCollection-ROLE_DinamoDB_acesso_tavela"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:dynamodb:action/Scan"
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\r\n    \"TableName\": \"PhotoCollection\",\r\n    \"\
            FilterExpression\":\"assuntoFoto = :v1\",\r\n    \"ExpressionAttributeValues\"\
            :{\r\n        \":v1\":{\"S\":\"$input.params('nome')\"}\r\n    \r\n  \
            \  }\r\n\r\n}"
        passthroughBehavior: "when_no_templates"
        type: "aws"
  /bucket/{item}:
    post:
      summary: "Inserir foto no bucket"
      produces:
      - "application/json"
      parameters:
      - name: "Content-Type"
        in: "header"
        required: true
        type: "string"
      - name: "item"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::518049171605:role/PhotoCollection-ROLE_S3_Acesso_Bucket"
        httpMethod: "PUT"
        uri: "arn:aws:apigateway:us-east-1:s3:path/marcelolabapigateway/{item}"
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "{\"messagem\":\"Envio com sucesso\"}"
        requestParameters:
          integration.request.path.item: "method.request.path.item"
        passthroughBehavior: "when_no_match"
        contentHandling: "CONVERT_TO_BINARY"
        type: "aws"
    delete:
      summary: "Deletar foto do bucket"
      produces:
      - "application/json"
      parameters:
      - name: "item"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::518049171605:role/PhotoCollection-ROLE_S3_Acesso_Bucket"
        httpMethod: "DELETE"
        uri: "arn:aws:apigateway:us-east-1:s3:path/marcelolabapigateway/{item}"
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "{\"messagem\":\"Arquivo deletado\"}"
        requestParameters:
          integration.request.path.item: "method.request.path.item"
        passthroughBehavior: "when_no_match"
        type: "aws"
  /photo/{id}:
    get:
      summary: "Listar foto por id"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        credentials: "arn:aws:iam::518049171605:role/PhotoCollection-ROLE_DinamoDB_acesso_tavela"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:dynamodb:action/Scan"
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\n    \"TableName\": \"PhotoCollection\",\n    \"FilterExpression\"\
            :\"idFoto = :v1\",\n    \"ExpressionAttributeValues\":{\n        \":v1\"\
            :{\"N\":\"$input.params('id')\"}\n    \n    }\n\n}"
        passthroughBehavior: "when_no_templates"
        type: "aws"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
x-amazon-apigateway-binary-media-types:
- "image/jpeg"
